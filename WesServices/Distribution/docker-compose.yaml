version: '3.5'

services:

  postgres:
    container_name: postgres_container
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - "./pg/docker_users_init.sql:/docker-entrypoint-initdb.d/1-docker_users_init.sql"
      - "./pg/docker_databases_init.sql:/docker-entrypoint-initdb.d/2-docker_databases_init.sql"
    ports:
      - "5454:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: db_admin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: db_admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "88:80"
    networks:
      - postgres
    restart: unless-stopped

  mongo:
    container_name: mongo_container
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: rootUser
      MONGO_INITDB_ROOT_PASSWORD: rootPassword
    volumes:
      - "./mongo/mongo-init.js:/docker-entrypoint-initdb.d/1-mongo-init.js"
    ports:
      - "27017:27017"

  mongo-express:
    container_name: mongo-express_container
    image: mongo-express:latest
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo_container
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      ME_CONFIG_MONGODB_ADMINUSERNAME: rootUser
      ME_CONFIG_MONGODB_ADMINPASSWORD: rootPassword
      ME_CONFIG_MONGODB_AUTH_USERNAME: rootUser
      ME_CONFIG_MONGODB_AUTH_PASSWORD: rootPassword

  redis:
    container_name: redis_container
    image: redis
    restart: always
    volumes:
    - "./redis.conf:/usr/local/etc/redis/redis.conf"
    ports:
      - "6379:6379"
    
  redis-insight:
    container_name: redis-insight_container
    image: redislabs/redisinsight
    restart: always
    ports:
      - "8001:8001"

  zookeeper:
    image: zookeeper
    restart: always
    hostname: zookeeper
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    volumes:
      - "./data/zoo/data:/var/lib/zookeeper/data"
      - "./data/zoo/log:/var/lib/zookeeper/log"

  kafka-1:
    image: bitnami/kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9095:9095"
      - "39095:39095"
    environment:
      KAFKA_CFG_NODE_ID: 101
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: LISTENER_INTERNAL://:9095, LISTENER_EXTERNAL://:39095
      KAFKA_CFG_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka-1:9095, LISTENER_EXTERNAL://localhost:39095
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT, LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_CFG_ZOOKEEPER_SESSION_TIMEOUT_MS: 6000
      KAFKA_CFG_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 6000

  kafka-2:
    image: bitnami/kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9096:9096"
      - "49096:49096"
    environment:
      KAFKA_CFG_NODE_ID: 102
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: LISTENER_INTERNAL://:9096, LISTENER_EXTERNAL://:49096
      KAFKA_CFG_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka-2:9096, LISTENER_EXTERNAL://localhost:49096
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT, LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_CFG_ZOOKEEPER_SESSION_TIMEOUT_MS: 6000
      KAFKA_CFG_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 6000

  kafka-3:
    image: bitnami/kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9097:9097"
      - "59097:59097"
    environment:
      KAFKA_CFG_NODE_ID: 103
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: LISTENER_INTERNAL://:9097, LISTENER_EXTERNAL://:59097
      KAFKA_CFG_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka-3:9097, LISTENER_EXTERNAL://localhost:59097
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT, LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_CFG_ZOOKEEPER_SESSION_TIMEOUT_MS: 6000
      KAFKA_CFG_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 6000

  kafka-init:
    container_name: kafka-init_container
    image: bitnami/kafka
    depends_on:
      kafka-1:
        condition: service_started
      kafka-2:
        condition: service_started
      kafka-3:
        condition: service_started
    volumes:
      - "./kafka/kafka1-init:/docker-entrypoint-initdb.d/kafka1-custom-init"
      - "./kafka/kafka2-init:/docker-entrypoint-initdb.d/kafka2-custom-init"
      - "./kafka/kafka3-init:/docker-entrypoint-initdb.d/kafka3-custom-init"
    command: > 
      bash -c "/docker-entrypoint-initdb.d/kafka1-custom-init
      && /docker-entrypoint-initdb.d/kafka2-custom-init
      && /docker-entrypoint-initdb.d/kafka3-custom-init"

  kafka-ui:
    container_name: kafka-ui_container
    image: provectuslabs/kafka-ui
    ports:
      - "8070:8070"
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:9095,kafka-2:9096,kafka-3:9097
      SERVER_PORT: 8070

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin: